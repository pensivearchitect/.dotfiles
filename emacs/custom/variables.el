;;; Initialization variables
(setq backup-directory-alist '(("." . "~/.saves")))
(setq backup-by-copying t)
(setq auto-save-default nil)
(setq inferior-lisp-program "/usr/local/bin/clisp")
(setq custom-file "~/.emacs-custom.el")
(setq tramp-default-method "ssh")
(setq lintnode-location "~/.emacs.d/personal/lintnode")
(setq lintnode-jslint-excludes (list 'nomen 'undef 'plusplus 'onevar 'white))
(setq inferior-js-program-command "node")
(setenv "path" (concat (getenv "path") ":/usr/local/bin"))
(setq exec-path (append exec-path '("/usr/local/bin")))
(setq evil-default-cursor '("white" bar))
(setq-default indent-tabs-mode nil)
(setq scroll-margin 1
      scroll-conservatively 0
      scroll-up-aggressively 0.01
      scroll-down-aggressively 0.01)
(setq-default scroll-up-aggressively 0.01
              scroll-down-aggressively 0.01)
(setq system-uses-terminfo nil)
(setq vc-handled-backends '(rcs svn cvs sccs bzr hg mtn arch))
(setq ring-bell-function #'ignore)
(setq show-paren-delay 0)
(setq confirm-nonexistent-file-or-buffer nil)
(setq ido-use-faces nil)
(setq gc-cons-threshold 20000000)
(setq comment-column 0)
(setq fill-column 0)
(setq projectile-indexing-method 'alien)
(setq projectile-enable-caching t)
(setq sp-autoescape-string-quote nil)
(setq projectile-switch-project-action 'projectile-dired)
(setq multi-term-program "/bin/bash")
(setq shm-program-name "/Users/joshua/emacs/structured-haskell-mode/dist/build/structured-haskell-mode/structured-haskell-mode")
(setq ido-enable-flex-matching t)
(setq gc-cons-threshold 20000000)
(setq ido-use- nil)
(setq wl-init-file "~/.wl")
(setq php-auto-yasnippet-php-program "~/emacs/php-auto-yasnippets/Create-PHP-YASnippet.php")
(setq dime-dylan-implementations
      '((opendylan ("~/source/opendylan-2013.2/bin/dswank")
                   :env ("OPEN_DYLAN_USER_REGISTRIES=~/source/opendylan-2013.2/sources/registry"))))
(setq yas/prompt-functions '(yas/popup-isearch-prompt yas/no-prompt))
(setq ag-highlight-search t)
(setq display-time-format " %I:%M")
(setq shm-program-name "/home/josh/structured-haskell-mode/dist/build/structured-haskell-mode/structured-haskell-mode")

(provide 'variables)
